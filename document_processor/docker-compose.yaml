services:

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://user:password@db/document_processor
      - DJANGO_SETTINGS_MODULE=document_processor.settings
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      redis:
        condition: service_started
    links:
      - db:db
    networks:
      - pg-network

  celery:
    build: .
    command: celery -A document_processor worker --loglevel=info
    volumes:
      - ./:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=document_processor.settings
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - pg-network

  celery_beat:
    build: .
    command: bash -c "celery -A document_processor beat -l info"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/1
      - DJANGO_SETTINGS_MODULE=document_processor.settings
      - DATABASE_URL=postgres://user:password@db/document_processor
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - pg-network

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=document_processor
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    networks:
      - pg-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "5050:80"
    networks:
      - pg-network
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - pg-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_URL=redis://redis:6379/1
    networks:
      - pg-network

  flower:
    build: .  # Use your application's Dockerfile
    command: celery -A document_processor flower --port=5555
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - DJANGO_SETTINGS_MODULE=document_processor.settings
      - REDIS_URL=redis://redis:6379/1
    networks:
      - pg-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      celery:
        condition: service_started

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  pg-network:
    driver: bridge